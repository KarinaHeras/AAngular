{"version":3,"sources":["webpack:///Users/karinaheras/Desktop/proyectoStencilJs/stencilkurso/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///Users/karinaheras/Desktop/proyectoStencilJs/stencilkurso/dist/esm/index-c9ee93b5.js","webpack:///Users/karinaheras/Desktop/proyectoStencilJs/stencilkurso/dist/esm/loader.mjs","webpack:///Users/karinaheras/Desktop/proyectoStencilJs/stencilkurso/dist/esm/polyfills/index.js","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/backoffice/backoffice.component.ts","webpack:///src/app/backoffice/backoffice.component.html","webpack:///src/app/backoffice/backoffice.module.ts","webpack:///src/app/backoffice/post-detail/post-detail.component.ts","webpack:///src/app/backoffice/post-detail/post-detail.component.html","webpack:///src/app/business/post/create-post/create-post.component.ts","webpack:///src/app/business/post/create-post/create-post.component.html","webpack:///src/app/business/post/post-edit/post-edit.component.ts","webpack:///src/app/business/post/post-edit/post-edit.component.html","webpack:///src/app/business/post/post-list/post-list.component.ts","webpack:///src/app/business/post/post-list/post-list.component.html","webpack:///src/app/business/post/post-proxy.service.ts","webpack:///src/app/business/post/post.service.ts","webpack:///src/app/login/auth-proxy.service.ts","webpack:///src/app/login/private-registry/private-registry.component.ts","webpack:///src/app/login/private-registry/private-registry.component.html","webpack:///src/app/login/registry/registry.component.ts","webpack:///src/app/login/registry/registry.component.html","webpack:///src/app/login/signin/signin.component.ts","webpack:///src/app/login/signin/signin.component.html","webpack:///src/app/login/signup/signup.component.ts","webpack:///src/app/login/signup/signup.component.html","webpack:///src/app/notificaciones-bus.service.ts","webpack:///src/app/public/home.module.ts","webpack:///src/app/public/home/home.component.ts","webpack:///src/app/public/home/home.component.html","webpack:///src/app/public/home/post-edit-card/post-edit-card.component.ts","webpack:///src/app/public/home/post-edit-card/post-edit-card.component.html","webpack:///src/app/public/home/post-list/post-list-card.component.ts","webpack:///src/app/public/home/post-list/post-list-card.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/registry.service.ts","webpack:///src/app/service/token-interceptor.service.ts","webpack:///src/app/store/post-detail-store.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/store/store.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","webpackAsyncContextKeys","Object","module","exports","NAMESPACE","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","queuePending","win","window","CSS","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","supportsShadow","attachShadow","indexOf","promiseResolve","v","supportsConstructibleStylesheets","CSSStyleSheet","HYDRATED_CSS","createTime","fnName","tagName","uniqueTime","key","measureText","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","replace","set","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","nodeType","appliedStyles","styleElm","Set","has","$cssShim$","createHostStyle","newScopeId","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","attachStyles","hostRef","$cmpMeta$","elm","$hostElement$","flags","endAttachStyles","$tagName$","shadowRoot","getRootNode","$modeName$","classList","cmp","EMPTY_OBJ","isDef","isComplexType","getDynamicImportFunction","namespace","nodeName","vnodeData","child","slotName","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","push","newVNode","children","name","classData","className","filter","k","join","vnode","$attrs$","$children$","$name$","tag","text","$tag$","$elm$","Host","isHost","node","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","slice","isComplex","n","removeAttribute","setAttribute","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","isSameVnode","patch","nextSibling","vnode1","vnode2","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","ilen","j","slotNameAttr","hidden","getAttribute","trim","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","find","r","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","renderVdom","renderFnResults","$vnode$","rootVnode","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","previousSibling","getElement","ref","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","ev","CustomEvent","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","isInitialLoad","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","promise","updateComponent","endUpdate","rc","endRender","callRender","updateHost","cb","childrenPromises","postUpdate","postUpdateComponent","all","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","nextTick","forceUpdate","isConnected","who","documentElement","thenFn","parsePropertyValue","propValue","propType","getValue","propName","$instanceValues$","setValue","newVal","oldVal","$members$","proxyComponent","Cstr","members","entries","prototype","memberFlags","defineProperty","configurable","enumerable","attrNameToPropName","Map","attributeChangedCallback","attrName","_oldValue","observedAttributes","_","m","initializeComponent","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","endRegisterStyles","scopeCss","schedule","connectedCallback","endConnected","setContentReference","hasOwnProperty","contentRefElm","createComment","firstChild","disconnectedCallback","removeHost","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","lazyBundle","compactMeta","$listeners$","HostElement","self","registerHost","clearTimeout","$onReadyPromise$","HTMLElement","$lazyBundleIds$","define","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","importedModule","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","patchEsm","supports","__cssshim","patchBrowser","scriptElm","from","querySelectorAll","s","RegExp","test","src","history","scrollRestoration","location","patchDynamicImport","base","orgScriptElm","importFunctionName","Function","Math","random","moduleMap","url","mod","script","type","crossOrigin","createObjectURL","Blob","onload","defineCustomElements","applyPolyfills","promises","checkIfURLIsSupported","u","pathname","searchParams","Element","closest","matches","startsWith","endsWith","NodeList","forEach","fetch","webpackEmptyAsyncContext","AppComponent","selector","templateUrl","styleUrls","ROUTES","path","redirectTo","pathMatch","component","AppModule","provide","useClass","multi","forRoot","declarations","imports","providers","bootstrap","schemas","AuthGuard","authService","router","loggedIn","alert","navigate","providedIn","BackofficeComponent","activatedRoute","storePostDetail","Postservi","notificationsBus","post","editPostBtn","editCommentBtn","postID","snapshot","paramMap","token","localStorage","getItem","deletePost","canActivate","BackofficeModule","PostDetailComponent","proxy","params","postId","subscribe","CreatePostComponent","postService","form","title","required","content","log","create","res","navigateByUrl","controls","submit","PostEditComponent","route","findById","update","PostListComponent","authServi","posts","publicPost$","getPublicPost","protectedPost$","getProtectedPost","getAll","_id","item","PostProxyService","httpClient","put","comment","PostService","httpOptions","headers","responseType","modals","pipe","errorHandler","Authorization","JSON","stringify","errorMessage","ErrorEvent","message","status","AuthProxyService","PrivateRegistryComponent","registryService","privateRegy","getRegistry","err","RegistryComponent","registry","registrys","SigninComponent","authservice","user","username","password","signIn","setItem","SignupComponent","signUp","NotificacionesBusService","HomeModule","forChild","HomeComponent","service","PostEditCardComponent","getAll$","PostListCardComponent","getAllPost","relativeTo","postSeleccionado","AuthService","http","URL2","basicAuth","btoa","RegistryService","TokenInterceptorService","next","tokenizeReq","clone","setHeader","Autorization","getToken","handle","PostDetailStoreService","environment","production","bootstrapModule","Store","state$","get$","asObservable","store","nextState"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./button-post.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/button-post.entry.js\",\n\t\t0\n\t],\n\t\"./foo-ter.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/foo-ter.entry.js\",\n\t\t1\n\t],\n\t\"./gk-holy.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/gk-holy.entry.js\",\n\t\t2\n\t],\n\t\"./home-post.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/home-post.entry.js\",\n\t\t3\n\t],\n\t\"./menu-stx.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/menu-stx.entry.js\",\n\t\t4\n\t],\n\t\"./my-component.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/my-component.entry.js\",\n\t\t5\n\t],\n\t\"./post-card.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/post-card.entry.js\",\n\t\t6\n\t],\n\t\"./post-detail.entry.js\": [\n\t\t\"../../proyectoStencilJs/stencilkurso/dist/esm/post-detail.entry.js\",\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../proyectoStencilJs/stencilkurso/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","const NAMESPACE = 'stencilkurso';\n\nlet scopeId;\nlet contentRef;\nlet hostTagName;\nlet useNativeShadowDom = false;\nlet checkSlotFallbackVisibility = false;\nlet checkSlotRelocate = false;\nlet isSvgMode = false;\nlet queuePending = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst CSS =  win.CSS ;\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: h => h(),\n    raf: h => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n};\nconst supportsShadow =  /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)() ;\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets =  /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return true;\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId = getScopeId(cmpMeta);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    if ( plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */));\n                        const newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if ( !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle( supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if ( flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + ( cmp.$tagName$);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let slotName = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        if ( vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter(k => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if ( memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n        }\n        else if ( ( !isProp ) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            if (newValue == null || newValue === false) {\n                {\n                    elm.removeAttribute(memberName);\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    let oldVNode;\n    if ( !useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* isSlotReference */;\n        }\n    }\n    if ( newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if ( newVNode.$flags$ & 1 /* isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ =  doc.createTextNode('');\n    }\n    else {\n        // create element\n        elm = newVNode.$elm$ = ( doc.createElement( newVNode.$flags$ & 2 /* isSlotFallback */ ? 'slot-fb' : newVNode.$tag$));\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ( isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n    }\n    {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nconst putBackInOriginalLocation = (parentElm, recursive) => {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    const oldSlotChildNodes = parentElm.childNodes;\n    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        const childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (( parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    let childNode;\n    if ( containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode,  referenceNode(before) );\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            if ( (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            if ( (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if ( newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        if ( vnode1.$tag$ === 'slot') {\n            return vnode1.$name$ === vnode2.$name$;\n        }\n        return true;\n    }\n    return false;\n};\nconst referenceNode = (node) => {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nconst parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    let defaultHolder;\n    if ( text === null) {\n        // element node\n        {\n            if ( tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if ( oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if ( oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if ( oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n    }\n    else if ( (defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if ( oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst updateFallbackSlotVisibility = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let childNodes = elm.childNodes;\n    let childNode;\n    let i;\n    let ilen;\n    let j;\n    let slotNameAttr;\n    let nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n                        // this sibling node is from a different component\n                        nodeType = childNodes[j].nodeType;\n                        if (slotNameAttr !== '') {\n                            // this is a named fallback slot node\n                            if (nodeType === 1 /* ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (nodeType === 1 /* ElementNode */ || (nodeType === 3 /* TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nconst relocateNodes = [];\nconst relocateSlotContent = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let childNode;\n    let node;\n    let hostContentNodes;\n    let slotNameAttr;\n    let relocateNodeData;\n    let j;\n    let i = 0;\n    let childNodes = elm.childNodes;\n    let ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find(r => r.$nodeToRelocate$ === node);\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map(relocateNode => {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find(r => r.$nodeToRelocate$ === node);\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some(r => r.$nodeToRelocate$ === node)) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nconst isNodeLocatedInSlot = (nodeToRelocate, slotNameAttr) => {\n    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = ( hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            let relocateData;\n            let nodeToRelocate;\n            let orgLocationNode;\n            let parentNodeRef;\n            let insertBeforeNode;\n            let refNode;\n            let i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode =  doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) || nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\nconst getElement = (ref) => ( getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail,\n            });\n        },\n    };\n};\nconst emitEvent = (elm, name, opts) => {\n    const ev = new ( CustomEvent)(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if ( ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise(r => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if ( hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestorc omponent or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return  writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance =  hostRef.$lazyInstance$ ;\n    let promise;\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if ( isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            renderVdom(hostRef, callRender(hostRef, instance));\n        }\n    }\n    if ( plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    if ( rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(cb => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance) => {\n    try {\n        instance =  instance.render() ;\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (ref) => {\n    {\n        const hostRef = getHostRef(ref);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => ( elm.classList.add('hydrated') );\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if ( propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance =  hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if (( !(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if ( instance) {\n            if ( (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if ( cmpMeta.$members$) {\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ( (memberFlags & 31 /* Prop */ || (( flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n        });\n        if ( ( flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ( (hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        // we haven't initialized this element yet\n        hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n        {\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ( !Cstr.isProxied) {\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            endNewInstance();\n        }\n        const scopeId = getScopeId(cmpMeta);\n        if ( !styles.has(scopeId) && Cstr.style) {\n            const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if ( cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n                style = await import('./shadow-css-7f9c6860.js').then(m => m.scopeCss(style, scopeId, false));\n            }\n            registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n            endRegisterStyles();\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if ( ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the intial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if ( ( cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if ( cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n        }\n        endConnected();\n    }\n};\nconst setContentReference = (elm) => {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    const contentRefElm = (elm['s-cr'] = doc.createComment( ''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        // clear CSS var-shim tracking\n        if ( plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map(lazyBundle => lazyBundle[1].map(compactMeta => {\n        const cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        if ( !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n        }\n        const tagName =  cmpMeta.$tagName$;\n        const HostElement = class extends HTMLElement {\n            // StencilLazyHost\n            constructor(self) {\n                // @ts-ignore\n                super(self);\n                self = this;\n                registerHost(self, cmpMeta);\n                if ( cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    if (supportsShadow) {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                    else if ( !('shadowRoot' in self)) {\n                        self.shadowRoot = self;\n                    }\n                }\n            }\n            connectedCallback() {\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(() => connectedCallback(this));\n                }\n            }\n            disconnectedCallback() {\n                plt.jmp(() => disconnectedCallback(this));\n            }\n            forceUpdate() {\n                forceUpdate(this);\n            }\n            componentOnReady() {\n                return getHostRef(this).$onReadyPromise$;\n            }\n        };\n        cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }));\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(host => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise(r => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e) => console.error(e);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = ( cmpMeta.$lazyBundleIds$);\n    const module =  cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${ ''}`).then(importedModule => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nconst patchEsm = () => {\n    // @ts-ignore\n    if ( !(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n        // @ts-ignore\n        return import(/* webpackChunkName: \"polyfills-css-shim\" */ './css-shim-8a9bfe22.js').then(() => {\n            if ((plt.$cssShim$ = win.__cssshim)) {\n                return plt.$cssShim$.i();\n            }\n            else {\n                // for better minification\n                return 0;\n            }\n        });\n    }\n    return promiseResolve();\n};\nconst patchBrowser = () => {\n    {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    // @ts-ignore\n    const scriptElm =  Array.from(doc.querySelectorAll('script')).find(s => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        ;\n    const opts =  scriptElm['data-opts'] || {} ;\n    if ( 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if ( !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom-24a54a40.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], { type: 'application/javascript' }));\n                mod = new Promise(resolve => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\n\nexport { Host as H, patchEsm as a, bootstrapLazy as b, createEvent as c, h, patchBrowser as p, registerInstance as r };\n","import { a as patchEsm, b as bootstrapLazy } from './index-c9ee93b5.js';\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"button-post\",[[1,\"button-post\",{\"detalles\":[1]}]]],[\"foo-ter\",[[1,\"foo-ter\",{\"nombre\":[1],\"copia\":[1],\"derechos\":[1],\"privado\":[1]}]]],[\"gk-holy\",[[1,\"gk-holy\"]]],[\"home-post\",[[1,\"home-post\"]]],[\"menu-stx\",[[1,\"menu-stx\"]]],[\"my-component\",[[1,\"my-component\",{\"first\":[1],\"middle\":[1],\"last\":[1]}]]],[\"post-card\",[[1,\"post-card\",{\"_id\":[1],\"titulo\":[1],\"contenido\":[1],\"nombre\":[1]}]]],[\"post-detail\",[[1,\"post-detail\",{\"titulo\":[1],\"nickname\":[1],\"comentario\":[1],\"_id\":[1]}]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n","export function applyPolyfills() {\n  var promises = [];\n  if (typeof window !== 'undefined') {\n    var win = window;\n\n    if (!win.customElements ||\n      (win.Element && (!win.Element.prototype.closest || !win.Element.prototype.matches || !win.Element.prototype.remove || !win.Element.prototype.getRootNode))) {\n      promises.push(import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js'));\n    }\n\n    function checkIfURLIsSupported() {\n      try {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        return (u.href === 'http://a/c%20d') && u.searchParams;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    if (\n      'function' !== typeof Object.assign || !Object.entries ||\n      !Array.prototype.find || !Array.prototype.includes ||\n      !String.prototype.startsWith || !String.prototype.endsWith ||\n      (win.NodeList && !win.NodeList.prototype.forEach) ||\n      !win.fetch ||\n      !checkIfURLIsSupported() ||\n      typeof WeakMap == 'undefined'\n    ) {\n      promises.push(import(/* webpackChunkName: \"polyfills-core-js\" */ './core-js.js'));\n    }\n  }\n  return Promise.all(promises);\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";"," import { Component } from '@angular/core';\n// import { Notificacion } from './notificacion';\n// import { NotificacionesBusService } from './notificaciones-bus.service';\n\n @Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n//   constructor(private notificacionesBus: NotificacionesBusService) { }\n\n//   ngOnInit() {\n//        this.notificacionesSub =\n//        this.notificacionesBus.getNotificacion().subscribe(\n//           (notificacion: Notificacion) => {\n//               this.msgs = [];\n//               this.msgs.push(notificacion);\n//            }\n//         );\n//   }\n }\n","<nav>\n    <a [routerLink]=\"['home']\">Home</a>\n    <a [routerLink]=\"['post/list']\">Mis Posts</a>\n    <a [routerLink]=\"['/signin']\">Login</a>\n    <a [routerLink]=\"['/signup']\">signUp</a>\n</nav>\n<router-outlet></router-outlet>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './auth.guard';\nimport { BackofficeModule } from './backoffice/backoffice.module';\nimport { CreatePostComponent } from './business/post/create-post/create-post.component';\nimport { PostEditComponent } from './business/post/post-edit/post-edit.component';\nimport { PostListComponent } from './business/post/post-list/post-list.component';\nimport { PrivateRegistryComponent } from './login/private-registry/private-registry.component';\nimport { RegistryComponent } from './login/registry/registry.component';\nimport { SigninComponent } from './login/signin/signin.component';\nimport { SignupComponent } from './login/signup/signup.component';\nimport { HomeModule } from './public/home.module';\nimport { PostEditCardComponent } from './public/home/post-edit-card/post-edit-card.component';\nimport { PostListCardComponent } from './public/home/post-list/post-list-card.component';\nimport { TokenInterceptorService } from './service/token-interceptor.service';\n\nconst ROUTES: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component:  PostListCardComponent},\n  { path: '**', redirectTo: 'home' },\n\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    RegistryComponent,\n    PrivateRegistryComponent,\n    PostEditComponent,\n    PostListComponent,\n    CreatePostComponent,\n    PostEditCardComponent,\n    PostListCardComponent,\n\n  ],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    HomeModule,\n    FormsModule,\n    CommonModule,\n    BackofficeModule,\n\n\n    RouterModule.forRoot(ROUTES)\n  ],\n  providers: [AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true,\n    // MessageService,\n    // ConfirmationService,\n\n  }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n    canActivate(): boolean{\n      if (this.authService.loggedIn()){\n       window.alert('acceso permitido!');\n       return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n}\n\n  // constructor(private authService: AuthService, private router: Router){}\n  // canActivate(): boolean{\n  //   if (this.authService.loggedIn()){\n  //     return true;\n  //   }\n  //   this.router.navigate(['/login']);\n  //   return false;\n  // }\n// }\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Post } from '../business/Model/post.model';\nimport { PostService } from '../business/post/post.service';\nimport { NotificacionesBusService } from '../notificaciones-bus.service';\nimport { PostDetailStoreService } from '../store/post-detail-store.service';\n\n@Component({\n  selector: 'app-backoffice',\n  templateUrl: './backoffice.component.html',\n  styleUrls: ['./backoffice.component.css']\n})\nexport class BackofficeComponent implements OnInit {\n\n  deleteCommentSub: Subscription;\n  post$: Observable<Post>;\n  editPostBtn: boolean;\n  editCommentBtn: boolean;\n  id: string;\n  error: string;\n  token: string;\n  postID: string;\n  post = null;\n  posts: any[];\n  postSeleccionado: Post;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private storePostDetail: PostDetailStoreService,\n    private Postservi: PostService,\n    private notificationsBus: NotificacionesBusService\n  ) { }\n\n  ngOnInit(): void {\n    this.editPostBtn = false;\n    this.editCommentBtn = false;\n\n\n    this.postID =  this.activatedRoute.snapshot.paramMap.get('id');\n   // this.storePostDetail.init(this.postID);\n\n    this.token = localStorage.getItem('token');\n  }\n\n  Post(){\n    this.editPostBtn = !this.editPostBtn;\n  }\n\n  deletePost(){\n    this.Postservi.deletePost(this.postID);\n    this.router.navigate(['backOffice']);\n   // this.notificationsBus.showWarn('Tu publicación ha sido eliminada correctamente!' );\n  }\n\n  backOffice(){\n    this.router.navigate(['backOffice']);\n  }\n\n  onClick(post){\n    this.post = post;\n  }\n\n\n\n    }\n\n\n\n\n\n\n","<p>estoy en el backoffice!</p>\n\n\n\n\n\n\n\n\n   <!--- <h1>Detalles del Post</h1>\n    <table class=\"table table-bordered\">\n      <tr>\n        <th>ID</th>\n        <th>Titulo</th>\n        <th>Descripcion</th>\n        <th>Nombre</th>\n        <th width=\"220px\">aqui iran los botones</th>\n      </tr>\n      <tr *ngFor=\"let post of posts\">\n      <td>{{ post._id }}</td>\n        <td>{{ post.title }}</td>\n        <td>{{ post.content }}</td>\n        <td>{{ post.nameAuthor }}</td>\n        <td>\n          <button type=\"button\" (click)=\"onClick(post)\">Detalles</button>\n        </td>\n      </tr>\n    </table>\n </div>-->\n\n\n\n\n\n\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { CreatePostComponent } from '../business/post/create-post/create-post.component';\nimport { PostEditComponent } from '../business/post/post-edit/post-edit.component';\nimport { PostListComponent } from '../business/post/post-list/post-list.component';\nimport { PrivateRegistryComponent } from '../login/private-registry/private-registry.component';\nimport { SigninComponent } from '../login/signin/signin.component';\nimport { SignupComponent } from '../login/signup/signup.component';\nimport { HomeComponent } from '../public/home/home.component';\nimport { PostListCardComponent } from '../public/home/post-list/post-list-card.component';\nimport { BackofficeComponent } from './backoffice.component';\nimport { PostDetailComponent } from './post-detail/post-detail.component';\n\nconst ROUTES: Routes = [\n  { path: '', component:  HomeComponent},\n  { path: 'private', component:   PrivateRegistryComponent, canActivate: [AuthGuard]},\n  { path: 'signup', component:  SignupComponent},\n  { path: 'signin', component:  SigninComponent},\n   { path: 'post', redirectTo: 'post/index', pathMatch: 'full'},\n   { path: 'post/list', component: PostListComponent },\n   { path: 'post/create', component: CreatePostComponent },\n   { path: 'post/:postId/edit', component: PostEditComponent },\n   { path: '', component: PostListCardComponent },\n   { path: '', redirectTo: '/post/card', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  declarations: [BackofficeComponent, PostDetailComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BackofficeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from 'src/app/business/Model/post.model';\nimport { PostService } from 'src/app/business/post/post.service';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css'],\n\n})\nexport class PostDetailComponent implements OnInit {\n  id: number;\n  post: Post;\n  constructor( private activatedRoute: ActivatedRoute, private proxy: PostService,  private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.params.postId;\n    this.proxy.find(this.id).subscribe((data: Post) => {\n      this.post = data;\n    });\n  }\n\n}\n  // ngOnInit(): void {\n  //   this.getPost();\n  // }\n  // getPost() {\n  //   this.id = this.activatedRoute.snapshot.params.id;\n  //   const res = this.proxy.findById(this.id).subscribe(data =>\n  //        this.post = data);\n\n  // }\n\n\n\n\n\n\n","<div class=\"container\">\n    <h5>Detalles Post</h5>\n    <a href=\"/home\" routerLink=\"/home\" class=\"btn btn-primary\">Back</a>\n\n    <div>\n        <strong>ID:</strong>\n        <p>{{ post._id }}</p>\n    </div>\n\n    <div>\n        <strong>Title:</strong>\n        <p>{{ post.title }}</p>\n    </div>\n\n    <div>\n        <strong>Comentario:</strong>\n        <p>{{ post.comments}}</p>\n    </div>\n\n\n     <div>\n        <strong>Nickname:</strong>\n        <p>{{ post.nickname }}</p>\n    </div>\n    <div  *ngIf=\"post?.comments.length <= 0\">\n  <p>No existen mas comentarios</p>\n</div>\n</div>\n\n\n\n<!--<div *ngFor=\"let comment of post?.comments\">\n<p>{{comment?.comment | json}}</p>\n<p>{{comment?.comment | json}}</p>\n<p>{{comment?.nickname}}</p>\n<p>{{comment?.post_id}}</p>\n</div>\n<div  *ngIf=\"post?.comments.length <= 0\">\n  <p>No existen mas comentarios</p>\n</div>-->\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PostService } from '../post.service';\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    public postService: PostService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      title: new FormControl('', [Validators.required]),\n      content: new FormControl('', Validators.required)\n    });\n  }\n\n  get f(){\n    return this.form.controls;\n  }\n  submit(){\n    console.log(this.form.value);\n    this.postService.create(this.form.value).subscribe(res => {\n         console.log('Post created successfully!');\n         this.router.navigateByUrl('post/index');\n    });\n  }\n}\n\n\n","\n<p>create-post works!</p>\n\n<div class=\"container\">\n    <h1>Crea un nuevo Post</h1>\n\n    <a href=\"#\" routerLink=\"/post/index\" class=\"btn btn-primary\">Volver</a>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n        <div class=\"form-group\">\n            <label for=\"title\">Titulo:</label>\n            <input\n                formControlName=\"title\"\n                id=\"title\"\n                type=\"text\"\n                class=\"form-control\">\n            <div *ngIf=\"f.title.touched && f.title.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.title.errors.required\">El titulo es necesario.</div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"content\">Descripcion</label>\n            <textarea\n                formControlName=\"content\"\n                id=\"content\"\n                type=\"text\"\n                class=\"form-control\">\n            </textarea>\n            <div *ngIf=\"f.content.touched && f.content.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.content.errors.required\">El contenido es necesario.</div>\n            </div>\n        </div>\n\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Enviar</button>\n    </form>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from '../../Model/post.model';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n\n  id: number;\n  post: Post;\n  form: FormGroup;\n\n  constructor(\n    public postService: PostService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params.postId;\n    this.postService.findById(this.id).subscribe((data: Post) => {\n      this.post = data;\n    });\n\n    this.form = new FormGroup({\n      title: new FormControl('', [Validators.required]),\n      content: new FormControl('', Validators.required)\n    });\n  }\n\n  get f(){\n    return this.form.controls;\n  }\n\n  submit(){\n    console.log(this.form.value);\n    this.postService.update(this.id, this.form.value).subscribe(res => {\n         console.log('Post updated successfully!');\n         this.router.navigateByUrl('post/index');\n    });\n  }\n\n}\n","<p>post-edit works!</p>\n<div class=\"container\">\n    <h1>Actulizar Post</h1>\n\n    <a href=\"#\" routerLink=\"/post/index\" class=\"btn btn-primary\">Volver</a>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n        <div class=\"form-group\">\n            <label for=\"title\">Titulo:</label>\n            <input\n                formControlName=\"title\"\n                id=\"title\"\n                type=\"text\"\n                [(ngModel)]=\"post.title\"\n                class=\"form-control\">\n            <div *ngIf=\"f.title.touched && f.title.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.title.errors.required\">El titulo es necesario.</div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"content\">Descripcion</label>\n            <textarea\n                formControlName=\"content\"\n                id=\"content\"\n                type=\"text\"\n                [(ngModel)]=\"post.content\"\n                class=\"form-control\">\n            </textarea>\n            <div *ngIf=\"f.content.touched && f.content.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.content.errors.required\">El contenido es necesario.</div>\n            </div>\n        </div>\n\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Actualizar</button>\n    </form>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Post } from '../../Model/post.model';\nimport { PostService } from '../post.service';\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n  publicPost$: Observable<string>;\n  protectedPost$: Observable<string>;\n\n  // si el formulario existe refresca\n  posts: Post[] = [];\nuserId: string;\n  constructor(private postService: PostService, private authServi: AuthService) { }\n\n  ngOnInit(): void {\n    this.publicPost$ = this.postService.getPublicPost();\n    this.protectedPost$ = this.postService.getProtectedPost();\n\n    this.postService.getAll().subscribe((data: Post[]) => {\n      this.posts = data;\n      console.log(this.posts);\n    });\n  }\n\n\n  deletePost(_id){\n    console.log(' NOOOOOOOO--------llego al subcribe');\n\n    this.postService.deletePost(_id).subscribe(res => {\n      console.log('------------llego al subcribe');\n      this.posts = this.posts.filter(item => item._id !== _id);\n      console.log('Post deleted!');\n    });\n  }\n\n}\n\n","<div class=\"container\">\n    <h4>Mi lista de post</h4>\n\n    <a href=\"#\" routerLink=\"/post/create/\" class=\"btn btn-success\">Create New Post</a>\n\n    <table class=\"table table-bordered\">\n      <tr>\n       <!-- <th>ID</th>-->\n        <th>Titulo</th>\n        <th>Descripcion</th>\n        <th width=\"220px\">aqui iran los botones</th>\n      </tr>\n      <tr *ngFor=\"let post of posts\">\n    <!---  <td>{{ post._id }}</td>-->\n        <td routerLink=\"['/post/detail', post._id, 'deteil']\">{{ post.title }}</td>\n        <td>{{ post.content }}</td>\n        \n        <td>\n          <a href=\"#\" [routerLink]=\"['/post/', post.id, 'datail']\" class=\"btn btn-info\">Ver</a>\n          <a href=\"#\" [routerLink]=\"['/post/', post._id, 'edit']\" class=\"btn btn-primary\">Editar</a>\n          <button type=\"button\" (click)=\"deletePost(post._id)\" class=\"btn btn-danger\">Delete</button>\n        </td>\n      </tr>\n    </table>\n </div>\n\n\n\n<!-------- aqui         ------------------------>\n<!--<h4>{{(getPost|async)?.title}}</h4>\n<p>{{(getPost|async)?.content}}</p>\n<p>{{(getPost|async)?.nickname}}</p>\n<ul>Comments:\n    <div *ngIf=\"(getPost|async)?.comments?.length>0; then ok else error\"></div>\n    <ng-template #ok>\n        <li *ngFor=\"let comment of (getPost|async)?.comments\">\n            <p>{{comment?.comment}}</p>\n            <p>{{comment?.nickname}}</p>\n            <button (click)=\"showForm(comment?._id)\">Edit</button>\n            <button (click)=\"deleteComment(comment?._id)\">Delete</button>\n        </li>\n    </ng-template>\n    <ng-template #error>No hay comentarios</ng-template>\n</ul>\n<button (click)=\"showForm('')\">Public comment</button>\n<br>\n<br>\n<div *ngIf=\"show\">\n    <form [formGroup]=\"createComment\">\n        Comment: <input type=\"text\" formControlName=\"comment\">\n        Nickname: <input type=\"text\" formControlName=\"nickname\">\n        <button (click)=\"handleComment()\" [disabled]=\"!createComment.valid\">Share</button>\n    </form>\n</div>-->\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostDto } from '../Model/post.dto';\nimport { Post } from '../Model/post.model';\nimport { postModelDto } from '../Model/postModelDto';\nimport { Posts } from '../Model/postmodelFrom';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProxyService {\n  readonly URL = 'http://localhost:3000';\n  selectedPosts: Posts ;\n  posts: Post[];\n\nconstructor(private httpClient: HttpClient) {\n// this.selectedPosts = new Posts();\n}\n\ngetAllPost$(): Observable < PostDto[] > {\n    return this.httpClient.get<PostDto[]>(this.URL);\n    }\nget$(postId: number): Observable < PostDto > {\n    return this.httpClient.get<PostDto>(`${this.URL}/${postId}`);\n    }\npost$(post: PostDto): Observable < PostDto > {\n    return this.httpClient.post<PostDto>(this.URL, { post });\n    }\nsavePost(post): Observable < PostDto > {\n      return this.httpClient.post<PostDto>(this.URL, { post });\n    }\nupdatePost$(postId: number, post: PostDto): Observable < PostDto > {\n    return this.httpClient.put<PostDto>(`${this.URL}/${postId}`, { post });\n    }\ndelete$(postId: number): Observable < PostDto > {\n    return this.httpClient.delete<PostDto>(`${this.URL}/${postId}`);\n    }\naddComment(id, comment): Observable < postModelDto > {\n      return this.httpClient.post<postModelDto>(`${this.URL}/${id}/comment`, comment);\n    }\n\nupdateComment(id, comment): Observable < postModelDto > {\n      return this.httpClient.put<postModelDto>(`${this.URL}/comments/${id}`, comment);\n    }\n\ndeleteComment(id): Observable < postModelDto > {\n      return this.httpClient.delete<postModelDto>(`${this.URL}/comments/${id}`);\n    }\n  }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Post } from '../Model/post.model';\nimport { PostProxyService } from './post-proxy.service';\n\n@Injectable({providedIn: 'root'})\nexport class PostService {\n\n  constructor(private httpClient: HttpClient, private proxy: PostProxyService) { }\n\n  readonly URL = 'http://localhost:3000';\nhttpOptions = {\n    headers: new HttpHeaders(\n      {responseType: 'text'})\n\n  };\n\nprivate modals: any[] = [];\n\ngetAll(): Observable < Post[] > {\n    return this.httpClient.get<Post[]>(this.URL + '/posts/')\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\ncreate(post): Observable < Post > {\n    const httpOptions = { headers: new HttpHeaders({Authorization: 'Bearer ' +  localStorage.getItem('token')}) };\n    console.log('estamos enviando esto desde el front', JSON.stringify(post));\n    return this.httpClient.post<Post>(this.URL + '/posts/', post, httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\nfindById(id): Observable < Post > {\n    return this.httpClient.get<Post>(this.URL + '/posts/' + id)\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\nupdate(id, post): Observable < Post > {\n    const httpOptions = { headers: new HttpHeaders({Authorization: 'Bearer ' +  localStorage.getItem('token')}) };\n    return this.httpClient.put<Post>(this.URL + '/posts/' + id, post, httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\n  find(id): Observable<Post> {\n    return this.httpClient.get<Post>(this.URL + '/posts/' + id)\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\n\n  // deletePost(post: Post | number): Observable<Post> {\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  //   };\n  //   const id = typeof post === 'number' ? post : post._id;\n  //   const url = `${this.URL}/${id}`;\n\n  //   return this.httpClient.delete<Post>(this.URL, httpOptions).pipe(\n  //     tap(_ => console.log(`deleted Post id=${id}`)),\n  //     catchError(this.errorHandler<Post>('deletePost'))\n  //   );\n  // }\n  // deletePost(id: string): Observable<Post> {\n  //   return this.proxy.delete$(id).pipe(\n  //          catchError(this.errorHandler)\n  //        );\n\n  // }\n\ndeletePost(_id) {\n    const httpOptions = { headers: new HttpHeaders({Authorization: 'Bearer ' +  localStorage.getItem('token')}) };\n    return this.httpClient.delete<Post>(this.URL + '/posts/' + _id, httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    );\n  }\n\n\nerrorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\ngetPublicPost(): Observable < string > {\n  return this.httpClient.get(this.URL, {responseType: 'text'});\n}\n\ngetProtectedPost(): Observable < string > {\n  return this.httpClient.get(this.URL,\n  {responseType: 'text'});\n}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProxyService {\n // private URL2 = 'http://localhost:3000/auth';\n\n//   constructor(private http: HttpClient, private router: Router, private proxy: AuthService) { }\n\n// login(username: string, password: string): Observable<TokenDTO> {\n//     return this.http.post<TokenDTO>('http://localhost:3000/auth',\n//           {username, password});\n//   }\n\n }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RegistryService } from 'src/app/service/registry.service';\n\n@Component({\n  selector: 'app-private-registry',\n  templateUrl: './private-registry.component.html',\n  styleUrls: ['./private-registry.component.css']\n})\nexport class PrivateRegistryComponent implements OnInit {\n  privateRegy = [];\n  constructor(private registryService: RegistryService, private router: Router) { }\n// este metodo\n  ngOnInit(): void {\n    this.registryService.getRegistry()\n    .subscribe(\n      res => this.privateRegy = res,\n      err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n}\n}\n","<p>private-registry</p>\n<!--<div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let private-registry of private-registrys\">\n        <div class=\"card\">\n            <div class=\"card-b\">\n                <h3>{{registry.nameAuthor}}</h3>\n                <p>{{registry.title}}</p>\n            </div>\n        </div>\n    </div>\n</div>-->\n","import { Component, OnInit } from '@angular/core';\nimport { RegistryService } from 'src/app/service/registry.service';\n@Component({\n  selector: 'app-registry',\n  templateUrl: './registry.component.html',\n  styleUrls: ['./registry.component.css']\n})\nexport class RegistryComponent implements OnInit {\n registrys = [];\n  constructor( private registry: RegistryService) { }\n\n  ngOnInit() {\n\n    this.registry.getRegistry()\n    .subscribe(\n      res => {\n        console.log(res);\n        this.registrys = res.registry;\n      }\n\n    );\n}\n  }\n\n\n","<p>registro</p>\n\n<div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let registry of registrys\">\n        <div class=\"card\">\n            <div class=\"card-b\">\n                <h3>{{registry.nameAuthor}}</h3>\n                <p>{{registry.title}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  user = {\n    username: '',\n    password: '',\n  };\n  constructor(private authservice: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n\n\n  }\n\nsignIn(){\n  this.authservice.signIn(this.user)\n   .subscribe(\n     res => {\n       localStorage.setItem('token', res.token);\n       this.router.navigate(['/post/list']);\n     },\n     err => console.log(err)\n   );\n }\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-he\">\n                Login\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signIn()\">\n                    <div class=\"form-group\">\n                         <input type=\"text\" [(ngModel)]=\"user.username\" name=\"username\" class=\"form-control\" placeholder=\"username\" required autofocus>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div>\n                    <button class=\"btnbtn-block\">\n                      Login\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!--{{ signinForm.status }}\n\n{{signinForm.value | json}}\n{{signinForm.valid}}-->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n user = {\n   username: '',\n   password: '',\n };\n  constructor(private authservice: AuthService,  private router: Router) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n  signUp() {\n    this.authservice.signUp(this.user)\n     .subscribe(\n       res => {\n         console.log(res);\n         localStorage.setItem('token', res.token);\n         this.router.navigate(['/private']);\n       },\n       err => console.log(err)\n    );\n\n     }\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                SignUp\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signUp()\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"user.username\" name=\"username\" class=\"form-control\" placeholder=\"username\" required autofocus>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div>\n                    <button class=\"btn btn-primary btn-block\">\n                        SignUp\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NotificacionesBusService {\n\n\n  // showNotificacionSource: ReplaySubject<Notificacion>;\n\n  // getNotificacion(): Observable {\n  //   return this.showNotificacionSource.asObservable();\n  // }\n\n  // showError(msg: string, summary?: string) {\n  //   this.show('error', summary, msg);\n  // }\n\n  // showSuccess(msg: string, summary?: string) {\n  //   this.show('success', summary, msg);\n  // }\n\n  // showInfo(msg: string, summary?: string) {\n  //   this.show('info', summary, msg);\n  // }\n\n  // showWarn(msg: string, summary?: string) {\n  //   this.show('warn', summary, msg);\n  // }\n\n  // private show(severity: string, summary: string, msg: string) {\n  //   const notificacion: Notificacion = {\n  //     severity,\n  //     summary,\n  //     detail: msg\n  //   };\n\n  //   this.notify(notificacion);\n\n  // }\n\n  // private notify(notificacion: Notificacion): void {\n  //   this.showNotificacionSource.next(notificacion);\n  // }\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { PostDetailComponent } from '../backoffice/post-detail/post-detail.component';\nimport { CreatePostComponent } from '../business/post/create-post/create-post.component';\nimport { PostEditComponent } from '../business/post/post-edit/post-edit.component';\nimport { PostListComponent } from '../business/post/post-list/post-list.component';\nimport { PrivateRegistryComponent } from '../login/private-registry/private-registry.component';\nimport { SigninComponent } from '../login/signin/signin.component';\nimport { SignupComponent } from '../login/signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { PostListCardComponent } from './home/post-list/post-list-card.component';\n\nconst ROUTES: Routes = [\n  { path: '', component:  HomeComponent},\n  // { path: '', redirectTo: '/registry', pathMatch: 'full' },\n  // { path: 'registry', component:  RegistryComponent},\n  { path: 'private', component:   PrivateRegistryComponent, canActivate: [AuthGuard]},\n  { path: 'signup', component:  SignupComponent},\n  { path: 'signin', component:  SigninComponent},\n   { path: 'post', redirectTo: 'post/index', pathMatch: 'full'},\n  { path: 'post/list', component: PostListComponent },\n   { path: 'post/create', component: CreatePostComponent },\n   { path: 'post/:postId/edit', component: PostEditComponent },\n   { path: '', component: PostListCardComponent },\n   { path: '', redirectTo: '/post/card', pathMatch: 'full' },\n   { path: 'post/detail/:id', component: PostDetailComponent}\n\n\n];\n@NgModule({\n  declarations: [\n   HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n\n\n    RouterModule.forChild(ROUTES)\n  ],\n  exports: [HomeComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { PostService } from 'src/app/business/post/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n posts: Observable<any>;\n\n  constructor( private service: PostService) { }\n\n  ngOnInit(): void {\n\n    // llamo al servicio y el sevicio llama al back\n     // *this.posts = this.service.getAllPost();\n    //  .subscribe(res => {\n    //     this.posts = res;\n    //     console.log(this.posts);\n\n    //      });\n  }\n\n}\n","\n<div id=\"welcome\">\n  <span class=\"welcome-heading\">Welcome</span>\n  <br>\n  <p>Hola Soy Karina Heras, bienvenido a  mi blog gracias por  los like.</p>\n  <p>\n    <a href=\"/home\">Home</a>\n  </p>\n</div>\n<div id=\"grid\">\n\n\n<!--- <div class=\"container\">\n    <home-post>\n        <div slot=\"section\">\n        </div>\n        <div slot=\"footer\">\n            <foo-ter  nombre=\"Karina Heras\" copia=\"© 2020\" derechos=\"Derechos reservados.\" privado=\"Privacy\"></foo-ter>\n        </div>\n    </home-post>\n</div>-->\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Post } from 'src/app/business/Model/post.model';\nimport { PostService } from 'src/app/business/post/post.service';\n\n@Component({\n  selector: 'app-post-edit-card',\n  templateUrl: './post-edit-card.component.html',\n  styleUrls: ['./post-edit-card.component.css']\n})\nexport class PostEditCardComponent implements OnInit {\n  getAll$: Observable<Post>;\n  id: string;\n  constructor(  public service: PostService,\n                private route: ActivatedRoute,\n                private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.findById();\n  }\n\n  findById(): void {\n    this.id = this.route.snapshot.params.id;\n    this.getAll$ = this.service.findById(this.id);\n  }\n  }\n","<div class=\"container\">\n    <div class=\"post-edit-card\">\n        <post-card>\n            <h4 slot=\"titulo\">{{(getAll$ | async)?.title}}</h4>\n            <p slot=\"contenido\">{{(getAll$ | async)?.content}}</p>\n        </post-card>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Post } from 'src/app/business/Model/post.model';\nimport { PostService } from 'src/app/business/post/post.service';\n\n@Component({\n  selector: 'app-post-list-card',\n  templateUrl: './post-list-card.component.html',\n  styleUrls: ['./post-list-card.component.css']\n})\nexport class PostListCardComponent implements OnInit {\n\ngetAll$: Observable<Post[]>;\npostSeleccionado: Post;\npost: Post;\n  constructor(\n    private service: PostService,\n    private router: Router,\n    private route: ActivatedRoute\n    ) { }\n\nngOnInit(): void {\n    this.getAllPost();\n  }\n\ngetAllPost(): void{\n  console.log('llego al get');\n  this.getAll$ = this.service.getAll();\n  }\n\nsubmit() {\n    this.router.navigateByUrl('home');\n  }\n\n onClick(id: string){\n  console.log('muestro el boton con id', id);\n  this.router.navigate([`post/detail/${id}`], {relativeTo: this.route});\n  console.log('muestro el boton despues');\n\n  }\n  onSelectPost(id: string): void{\n    console.log('Post seleccionado ' + id);\n    this.router.navigate([`post/detail/${id}`]);\n\n    this.postSeleccionado = this.post;\n  }\n }\n\n\n","<div id=\"welcome\">\n  <span class=\"welcome-heading\">Welcome</span>\n  <br>\n  <p>Hola Soy Karina Heras, bienvenido a  mi blog gracias por  los like.</p>\n  <p>\n    <a href=\"#\">Home</a> <a href=\"#\">About us</a>\n  </p>\n</div>\n<div id=\"grid\">\n\n<article class=\"card\" *ngFor=\"let post of (getAll$ | async)\">\n        <post-card  [titulo]=\"post.title\" [contenido]=\"post.content\" (boton)=\"onSelectPost(post._id)\">\n      <!--  <button-post [detelles]=\"post.detail\" ><a \"onclick(post)\"[routerLink]=\"['post-detail/']\">LEER MÁS >></a></button-post>-->\n\n        </post-card>\n\n</article>\n<app-post-detail></app-post-detail>\n<!--<app-post-detail [postDetailbtn]= \"postDetailbtn\" (cerrar)=\"cerrarDetalle()\"></app-post-detail>\n<md-card *ngFor=\"detail\">\n<md-card-title>\nDetalles de los Post\n</md-card-title>\n<md-card-content>\n<!--title:{{post.title}}\ncontent{{post.content}}\nNombre Autor:{{post.nameAuthor}}\nfecha: {{post.fecha}}\n<button md-button (click)=\"onCerrar\">Cerrar</button>\n</md-card-content>\n\n</md-card>-->\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenDTO } from '../login/auth-dto';\nimport { AuthProxyService } from '../login/auth-proxy.service';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthService {\n  private URL2 = 'http://localhost:3000/auth';\n\n  constructor(private http: HttpClient, private router: Router, private proxy: AuthProxyService) { }\n\n// metodo login\nsignIn(user){\n  const basicAuth  = btoa(`${user.username}:${user.password}`);\n // console.log('basicCCCCC', basicAuth);\n  const httpOptions = { headers: new HttpHeaders({Authorization: 'Basic ' + basicAuth }) };\n // return this.httpClient.post<any>\n // console.log('userAuth-Service', user);\n  return this.http.post<TokenDTO>(this.URL2 + '/login', {}, httpOptions);\n}\n\n// signIn(username: string, password: string): void {\n//   this.login(username, password).subscribe(\n//     (tokenDTO: TokenDTO) => localStorage.setItem('token', tokenDTO.token),\n//     (error) => console.log(error)\n//   );\n// }\n// metodo para registro\nsignUp(user){\n  const basicAuth  = btoa(`${user.username}:${user.password}`);\n  const httpOptions = { headers: new HttpHeaders({Authorization: 'Basic ' + basicAuth }) };\n  // console.log('soy user', user);\n  return this.http.post<TokenDTO>('http://localhost:3000/users', {}, httpOptions);\n\n}\n\n\n// metodo para saber si el usuario esta logeado\nloggedIn(){\n  console.log('don pepeitoooooooooo', localStorage.getItem('token'));\n  return !!localStorage.getItem('token');\n\n  // if (localStorage.getItem('token')){\n  //   return true;\n  // }\n\n}\n\n// // este metodo retornar el token que se ha guardado\ngetToken(){\n   return localStorage.getItem('token');\n\n }\n\n//  login(username: string, password: string): Observable<TokenDTO> {\n//     return this.http.post<TokenDTO>('http://localhost:3000/auth',\n//           {username, password});\n//   }\n\n// // cerrar sesion, elimina el token y asi elimina los datos del usuario\n// logout(){\n//   localStorage.removeItem('token');\n//   return this.router.navigate(['/signin']);\n// }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistryService {\n  private URL = 'http://localhost:3000/auth';\n  constructor(private http: HttpClient) { }\n\n// metodo para que me  muestre los registros\ngetRegistry(){\n  return this.http.get<any>(this.URL + '/registry');\n}\n\ngetPrivateRegistry(){\n  return this.http.get(this.URL + '/private-registry');\n}\n\n}\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n   constructor(private authService: AuthService) {}\n//   intercept(req: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n//     // Obtenemos el token\n//     const token: string = localStorage.getItem('token');\n\n// // Importante: modificamos de forma inmutable, //haciendo el clonado de la petición\n//     const authReq = req.clone(\n//       {headers: req.headers.set('Authorization', `Bearer ${this.authService.getToken()}`)}\n//     );\n// // Pasamos al siguiente interceptor de //la cadena la petición modificada\n//     return next.handle(authReq);\n//  }\n\n\n\n\n\n\n\n\n//  para; autenticacion; se; añade; a; la; cabecera;\n//  el; metodo; le; permite; añadir; header; y; luego; la; utorizacion;,\n//  para; autenticacion; se; añade; a; la; cabecera;\n//   el; metodo; le; permite; añadir; header; y; luego; la; utorizacion;,\n  intercept(req, next){\n    const tokenizeReq = req.clone({\n       setHeader: {\n         Autorization: `Bearer  ${this.authService.getToken()}`\n       }\n     });\n    return next.handle(tokenizeReq);\n   // el; handle; añade; una; cabecera; en; cada; peticion;\n   }\n  }\n\n","import { Injectable } from '@angular/core';\nimport { Store } from 'src/store/store';\nimport { Post } from '../business/Model/post.model';\nimport { PostService } from '../business/post/post.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostDetailStoreService extends Store<Post[]> {\n\n  constructor(\n\n    private service: PostService) {\n    super();\n}\n\n// init(id): Promise<Post> {\n//   return this.service.findById(id).pipe(\n//       tap(post => this.store(post))\n//   ).toPromise();\n// }\n\n// addComment$(id: string, comment: PostDetail): Promise<PostDetail> {\n//   return this.service.addComment(id, comment).pipe(\n//       tap(newComment => {\n//           const post = this.get();\n//           const newComments = [...post.comments, newComment];\n//           const newPost = { ...post, comments: newComments };\n//           this.store(newPost);\n//       })).toPromise();\n// }\n\n// deleteComment$(id: string): Promise<PostDetail> {\n//   return this.service.deletePost(id).pipe(\n//       tap(() => {\n//           const post = this.get();\n//           const newPosts = post.comments.filter(comment => comment._id !== id);\n//           const newPost = { ...post, comments: newPosts };\n//           this.store(newPost);\n//       })\n//   ).toPromise();\n// }\n\n// updateComment$(id: string, comment: PostDetail): Promise<PostDetail> {\n//   return this.service.updateComment(id, comment).pipe(\n//       tap(newComment => {\n//           const post = this.get();\n//           const c = Object.assign({}, newComment);\n//           const index = this.searchIndex(post.comments, id);\n//           const newComments = [...post.comments.slice(0, index), c, ...post.comments.slice(index + 1)];\n//           const newPost = { ...post, comments: newComments };\n//           this.store(newPost);\n//       })\n//   ).toPromise();\n// }\n\n// private searchIndex(comments: PostDetail[], commentId: string): number {\n//   return comments.findIndex(item => item._id === commentId);\n// }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { defineCustomElements } from 'stencilkurso/loader';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\ndefineCustomElements();\n","import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable } from 'rxjs/internal/Observable';\n\nexport abstract class Store<T>{\nprivate state$: BehaviorSubject<T> = new BehaviorSubject(undefined);\nget = (): T => this.state$.getValue();\nget$ = (): Observable<T> => this.state$.asObservable();\nstore = (nextState: T) => this.state$.next(nextState);\n}\n\n"]}